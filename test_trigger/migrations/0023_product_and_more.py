# Generated by Django 5.0.6 on 2024-05-21 09:21

import pgtrigger.compiler
import pgtrigger.migrations
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('test_trigger', '0022_remove_appendonlymodel_append_only_with_calculation_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('quantity', models.IntegerField()),
            ],
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='product',
            trigger=pgtrigger.compiler.Trigger(name='prevent_update_delete_when_quantity_zero', sql=pgtrigger.compiler.UpsertTriggerSql(func="\n            BEGIN\n                -- Check Quantity is zero or not\n                IF OLD.quantity <= 0 Then \n                    RAISE EXCEPTION 'Cannot update or delete when quantity is zero or negative';\n                END IF;\n                RETURN NULL;\n            END;\n        ", hash='40952c44b6f46f27b34526eaa922a188e3fe475f', operation='UPDATE OR DELETE', pgid='pgtrigger_prevent_update_delete_when_quantity_zero_4bcfb', table='test_trigger_product', when='BEFORE')),
        ),
    ]
