# Generated by Django 5.0.6 on 2024-05-21 10:18

import pgtrigger.compiler
import pgtrigger.migrations
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('test_trigger', '0030_remove_transaction_transaction_audit_changes_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Audit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('table_name', models.CharField(max_length=255)),
                ('operation', models.CharField(max_length=10)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user_name', models.CharField(max_length=255)),
                ('data', models.JSONField()),
            ],
            options={
                'db_table': 'audit_table',
            },
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='transaction',
            name='transaction_audit_changes',
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='transaction',
            trigger=pgtrigger.compiler.Trigger(name='transaction_audit_changes', sql=pgtrigger.compiler.UpsertTriggerSql(func="\n        DECLARE\n            audit_operation TEXT;\n            audit_data JSONB;\n        BEGIN\n            -- Determine the operation\n            CASE\n                WHEN TG_OP = 'INSERT' THEN\n                    audit_operation := 'INSERT';\n                    audit_data := ROW_TO_JSON(NEW);\n                WHEN TG_OP = 'UPDATE' THEN\n                    audit_operation := 'UPDATE';\n                    audit_data := JSONB_BUILD_OBJECT(\n                        'old', ROW_TO_JSON(OLD),\n                        'new', ROW_TO_JSON(NEW)\n                    );\n                WHEN TG_OP = 'DELETE' THEN\n                    audit_operation := 'DELETE';\n                    audit_data := ROW_TO_JSON(OLD);\n            END CASE;\n\n            -- Insert the audit record\n            INSERT INTO audit_table (table_name, operation, timestamp, user_name, data)\n            VALUES ('transactions', audit_operation, CURRENT_TIMESTAMP, CURRENT_USER, audit_data);\n\n            RETURN NEW;\n        END;\n        ", hash='75dd3ff3d9f9820593604093badffc823255974c', operation='INSERT OR UPDATE OR DELETE', pgid='pgtrigger_transaction_audit_changes_437a5', table='test_trigger_transaction', when='AFTER')),
        ),
    ]
